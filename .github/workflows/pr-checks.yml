name: PR checks

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
    paths-ignore:
      - conda-recipes/deps/**

permissions:
  contents: read

# Make sure CI fails on all warnings, including Clippy lints
env:
  RUSTFLAGS: "-Dwarnings"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features

  build:
    name: ${{ matrix.platform.runner }} ${{ matrix.platform.target }} ${{ matrix.platform.manylinux }}
    needs:
      - lint
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            target-platform: linux-64
            before: 'yum install --assumeyes perl-core'
            manylinux: 'auto'
            create-conda-package: true
          - runner: ubuntu-latest
            target: x86_64
            before: 'apt update && apt install -y libssl-dev'
            manylinux: 'musllinux_1_2'
          - runner: ubuntu-latest
            target: x64
            before: 'yum install --assumeyes perl-core'
            manylinux: 'auto'
          - runner: ubuntu-latest
            target: x86
            before: 'apt update && apt install -y libssl-dev'
            manylinux: 'musllinux_1_2'
          - runner: ubuntu-latest
            target: aarch64
            before: 'apt update && apt install -y libssl-dev'
          - runner: ubuntu-latest
            target: aarch64
            before: 'apt update && apt install -y libssl-dev'
            manylinux: 'auto'
          - runner: ubuntu-latest
            target: aarch64
            before: 'apt update && apt install -y libssl-dev'
            manylinux: 'musllinux_1_2'
          - runner: ubuntu-latest
            target: armv7
            before: 'apt update && apt install -y libssl-dev'
            manylinux: 'auto'
          - runner: ubuntu-latest
            target: armv7
            before: 'apt update && apt install -y libssl-dev'
            manylinux: 'musllinux_1_2'
          - runner: windows-latest
            target: x64
            target-platform: win-64
            create-conda-package: true
          - runner: windows-latest
            target: x86
          - runner: macos-latest
            target: x86_64
            target-platform: osx-64
            create-conda-package: true
          - runner: macos-latest
            target: aarch64
            target-platform: osx-arm64
            create-conda-package: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        if: runner.os == 'Windows'
        with:
          python-version: |
            3.9
            3.10
            3.11
            3.12
            3.13
          architecture: ${{ matrix.platform.target }}
      - uses: actions/setup-python@v5
        if: runner.os != 'Windows'
        with:
          python-version: |
            3.9
            3.10
            3.11
            3.12
            3.13
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: ${{ matrix.platform.manylinux }}
          before-script-linux: ${{ matrix.platform.before }}
      - name: Build conda package
        if: matrix.platform.create-conda-package
        uses: prefix-dev/rattler-build-action@v0.2.19
        with:
          upload-artifact: false
          artifact-name: conda-${{ matrix.platform.runner }}-${{ matrix.platform.target }}
          recipe-path: 'conda-recipes/recipe.yaml'
          build-args: '--target-platform ${{ matrix.platform.target-platform }} --experimental'

  sdist:
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist